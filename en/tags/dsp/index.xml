<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dsp on Nzo&#39;s Blog</title>
    <link>http://nianze.tk/en/tags/dsp/</link>
    <description>Recent content in dsp on Nzo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>daoxinzhishui@gmail.com (Nzo)</managingEditor>
    <webMaster>daoxinzhishui@gmail.com (Nzo)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 30 Jan 2020 12:58:10 -0500</lastBuildDate>
    
        <atom:link href="http://nianze.tk/en/tags/dsp/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>DSP Review</title>
        <link>http://nianze.tk/en/notes/2020/01/2020-01-30-dsp-review/</link>
        <pubDate>Thu, 30 Jan 2020 12:58:10 -0500</pubDate>
        <author>daoxinzhishui@gmail.com (Nzo)</author>
        <guid>http://nianze.tk/en/notes/2020/01/2020-01-30-dsp-review/</guid>
        <description>&lt;p&gt;A quick review of key concepts in digital signal processing such as aliasing, DFT, convolution, FIR/IIR filters, etc.&lt;/p&gt;
&lt;h1 id=&#34;aliasing&#34;&gt;Aliasing&lt;/h1&gt;
&lt;p&gt;Waves at frequencies $f$ and $(f + k \cdot f_s)$ look identical when sampled at rate $f_s$.&lt;/p&gt;
&lt;p&gt;If a signal $x$ has frequency content only within the $range \pm B$ Hz, then the sampling rate must be at least $f_s = 2B$ to avoid aliasing.&lt;/p&gt;
&lt;p&gt;$f_s/2$ is called the &lt;span style=&#34;color: #abd282&#34;&gt;&lt;strong&gt;Nyquist frequency&lt;/strong&gt;&lt;/span&gt; (for sampling rate $f_s$)&lt;/p&gt;
&lt;h1 id=&#34;fourier-transform&#34;&gt;Fourier transform&lt;/h1&gt;
&lt;h2 id=&#34;dft-discrete-fourier-transform&#34;&gt;DFT (Discrete Fourier transform)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Intuition: cross-correlate the signal against cosine and sine waves of different frequencies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;$$ X[m] = \sum_{n=0}^{N-1} x[n] \cdot (cos(2 \pi \cdot m \cdot n / N) - j \cdot sin(2 \pi \cdot m \cdot n / N)), m \in [0, N-1] $$&lt;/p&gt;
&lt;p&gt;With Euler&#39;s formula:&lt;/p&gt;
&lt;p&gt;$$ X[m] = \sum_{n=0}^{N-1} x[n] \cdot e^{-j2 \pi \cdot m \cdot n / N} $$&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/freq_m.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;$m^{th}$ analysis frequency has exactly $m$ cycles over the duration of the signal $N$, and $f_m = m \cdot f_s / N$ HZ. The gap between $f_m$ and $f_{m+1}$ is called the &lt;span style=&#34;color: #abd282&#34;&gt;bin spacing&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;dft-symmetry&#34;&gt;DFT symmetry&lt;/h3&gt;
&lt;p&gt;For real valued $x[n]$,&lt;/p&gt;
&lt;p&gt;$$e^{-j \cdot 2 \pi \cdot (N-m) \cdot / N} = e^{+j \cdot 2 \pi \cdot m \cdot m / N}$$&lt;/p&gt;
&lt;p&gt;In other words, $X[m] = X^{*}[N-m]$, or frequencies $N/2+1, &amp;hellip;, N-1$ are conjugates of $N/2-1, &amp;hellip;, 1$ (identical real parts, reverded-signed imaginary parts)&lt;/p&gt;
&lt;h3 id=&#34;dft-properties&#34;&gt;DFT properties&lt;/h3&gt;
&lt;h4 id=&#34;shifting&#34;&gt;Shifting&lt;/h4&gt;
&lt;p&gt;If $x_2[n] = x_1[n-D]$, then $X_2[m] = X_1[m] \cdot e^{-j2 \pi \cdot m \cdot D/N}$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Derivation:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;$|X_1[m]| = |X_2[m]|$&lt;/li&gt;
&lt;li&gt;for $x(t) = cos(2 \pi \cdot f_0 \cdot t - \varphi)$, phase offset in the DFT is $e^{-j \varphi}$&lt;/li&gt;
&lt;li&gt;if $D &amp;lt; N$, then $D/N$ is the proportion of entire signal being delayed, and $X_2[m]$ rotates $m$ times by angle $-2 \pi \cdot D/N$&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;linearity&#34;&gt;Linearity&lt;/h4&gt;
&lt;p&gt;$$ \sum_{n} (c_1 \cdot x_1[n] + c_2 \cdot x_2[n]) \cdot e^{-j2 \pi \cdot m \cdot n / N} = c_1 \cdot X_1[m] + c_2 \cdot X_2[m] $$&lt;/p&gt;
&lt;p&gt;In other words, scale and sum in time domain is equivalent to scale and sum in frequency domain&lt;/p&gt;
&lt;h4 id=&#34;combining-linearity-and-shifting&#34;&gt;Combining linearity and shifting&lt;/h4&gt;
&lt;p&gt;$$ x[n]= \sum_k A_k e^{-2 \pi \cdot k \cdot n/N - \varphi_k} \Rightarrow X[m] = A_m e^{-j \varphi_m} $$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when $k = m$, $e^{j2 \pi \cdot (k-m) \cdot n/N} = e^0 = 1$, thus&lt;br /&gt;
$$X[m] = A_m e^{-j \varphi_k}$$&lt;/li&gt;
&lt;li&gt;when $k$ ≠ $m$, the summation over all $n$ cancels out, thus&lt;br /&gt;
$$X[m] = 0$$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;idft-inverse-dft&#34;&gt;IDFT (Inverse DFT)&lt;/h2&gt;
&lt;p&gt;$$ x[n] = 1/N \cdot \sum_m X[m] \cdot e^{+j2 \pi \cdot m \cdot n/N} $$&lt;/p&gt;
&lt;p&gt;For each term $X[m] \cdot e^{+j2 \pi \cdot m \cdot n/N} = A \cdot e^{j(j \pi \cdot m \cdot n/N + \theta)}$, which is a complex sinusoid with amplitude $A$, phase $\theta$, and frequency $mf_s/N$ [Hz] (or $m$ [cycles per signal duration]). In other words, every signal can be expressed as a weighted sum of sinusoids&lt;/p&gt;
&lt;h3 id=&#34;spectral-leakage&#34;&gt;Spectral leakage&lt;/h3&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/leakage.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If a digital signal $x[n]$ has energy at frequencies which are not integer multiples of $f_s/N$, then this energy will leak (spread) across multiple DFT frequency bands $X[m]$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/no_cancel_out.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is caused because such frequencies don&#39;t have the whole number of cycles during sampling duration, so comparing to an &lt;strong&gt;analisis frequency&lt;/strong&gt; won&#39;t cancel out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this situation, $X[m]$ measures not just energy associated with the $m^{th}$ analysis frequency, but has contributions from every other non-analysis frequency.&lt;/p&gt;
&lt;h3 id=&#34;leakage-compensation&#34;&gt;Leakage compensation&lt;/h3&gt;
&lt;h4 id=&#34;strategy-1-have-large-n&#34;&gt;Strategy #1: Have large N&lt;/h4&gt;
&lt;p&gt;Long signals, high sampling rate $\Rightarrow$ more analysis frequencies, smaller gaps between them&lt;/p&gt;
&lt;h4 id=&#34;strategy-2-windowing&#34;&gt;Strategy #2: Windowing&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Intuition: force continuity at the edges, eliminate fractional cycles&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Before taking the DFT, Multiply $x[n]$ by a &lt;strong&gt;window&lt;/strong&gt;, which tapers the ends of the signal to (near) 0:&lt;br /&gt;
$$ x[n] \rightarrow w[n] \cdot x[n] $$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Result&lt;/strong&gt;: leakage concentrates on nearby frequencies, and is reduced for distant frequencies; at the same time, analysis frequencies leak to their neighbors as well:&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/leakage_compensation.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;p&gt;Since in naturally occurring signals, pure tones at exactly $mf_s/N$ hardly happen, we are unlikely to tell apart analysis and non-analysis frequencies. The overall benefits of windowing outweigh the drawbacks&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Key properties when designing/choosing a window:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Width of the &lt;strong&gt;main lobe&lt;/strong&gt;(in Hz or bins): how far does energy smear out locally&lt;/li&gt;
&lt;li&gt;Hight of the &lt;strong&gt;side lobe&lt;/strong&gt;(in dB): how loud is the leakage from distant frequencies&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/window_design.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;70%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h2 id=&#34;stftshort-time-fourier-transform&#34;&gt;STFT(short-time Fourier transform)&lt;/h2&gt;
&lt;h3 id=&#34;process&#34;&gt;Process&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Carve the signal into small &lt;strong&gt;frames&lt;/strong&gt;, with frame length $K$ and hop length $h$:
&lt;ul&gt;
&lt;li&gt;x[0], x[1], &amp;hellip;, x[K-1]&lt;/li&gt;
&lt;li&gt;x[h], x[h+1], &amp;hellip;, x[h+K-1]&lt;/li&gt;
&lt;li&gt;x[2h], x[2h+1], &amp;hellip;, x[2h+K-1]&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Window each frame to reduces leakage and artifacts from frame slicing&lt;/li&gt;
&lt;li&gt;Compute the DFT of each windowed frame&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;parameters--design&#34;&gt;Parameters &amp;amp; design&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Longer window (larger frame length $K$) means:
&lt;ul&gt;
&lt;li&gt;lower frequencies ($f_{min} = f_s / K$)&lt;/li&gt;
&lt;li&gt;higher frequency resolution ($f_{max}$ is determined by Nyquist, number of analysis frequencies depends on frame length)&lt;/li&gt;
&lt;li&gt;more data, more memory and compute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$K$ with value of power of 2 (512, 1024, &amp;hellip;) is ideal for FFT, pick $K$ to give the desired frequency resolution&lt;/li&gt;
&lt;li&gt;Smaller hop (smaller hop length $h$) means:
&lt;ul&gt;
&lt;li&gt;higher temporal resolution&lt;/li&gt;
&lt;li&gt;more data, more memory and compute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$h &amp;lt; K$, usually set hop = $K/2$ or $K/4$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;spectrogram&#34;&gt;Spectrogram&lt;/h3&gt;
&lt;p&gt;A &lt;strong&gt;spectrogram&lt;/strong&gt; is the STFT as an image, with each column as DFT of one frame into magnitude, which is usually log-scaled to decibels (dB). $log_2$ preserves visual size of octaves.&lt;/p&gt;
&lt;p&gt;$$ X[m] \rightarrow 20 \cdot log_{10}|X[m]| [dB] $$&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/Spectrogram-19thC.png&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h2 id=&#34;fft-fast-fourier-transform&#34;&gt;FFT (Fast Fourier Transform)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Idea: identify redundant calculations shared betwen different analysis frequencies, reducing time complexity from $O(N^2)$ to $O(N \cdot log(N))$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;FFT computes the DFT&lt;/li&gt;
&lt;li&gt;Requires signal length to be the power of 2 (1024, 2048, etc); otherwise pad up signal to the next power of 2 length&lt;/li&gt;
&lt;li&gt;FFT could be further optimized when the input is real-valued (the rfft() function in most FFT libraries) by taking use of &lt;a href=&#34;#dft-symmetry&#34;&gt;conjugate symmetry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;convolution&#34;&gt;Convolution&lt;/h1&gt;
&lt;h2 id=&#34;definition&#34;&gt;Definition&lt;/h2&gt;
&lt;p&gt;$$ y[n] = \sum_{k=0}^{K-1}h[k] \cdot x[n-k] = x * h $$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$h$ is filter coefficients ordered from &lt;strong&gt;most recent&lt;/strong&gt; ($h[0]$) to least recent ($h[K-1]$), while $x$ is ordered by increasing time $ \Rightarrow $ reversing $x$ to line up with $h$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;modes&#34;&gt;Modes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Valid: no zero-padding, $[N]*[K] \rightarrow [N-K+1]$&lt;/li&gt;
&lt;li&gt;Same: zero-padding before the signal, $[N]*[K] \rightarrow [max(N, K)]$&lt;/li&gt;
&lt;li&gt;Full: pad by zeros on both ends, $[N]*[K] \rightarrow [N+K-1]$&lt;/li&gt;
&lt;li&gt;Circular: like &lt;em&gt;Same&lt;/em&gt; mode except $x$ is &lt;em&gt;looped&lt;/em&gt; instead of zero-padded&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;simple-filters&#34;&gt;Simple filters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gain: $h=[G]$
&lt;ul&gt;
&lt;li&gt;$x[n] \rightarrow G \cdot x[n]$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delay: $h=[0, 0,&amp;hellip;, 1]$
&lt;ul&gt;
&lt;li&gt;$x[n] \rightarrow x[n+d]$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Averaging: $h=[1/K, 1/K,&amp;hellip;, 1/K]$
&lt;ul&gt;
&lt;li&gt;fast changes get smoothed out, making a crude low-pass filter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Differencing: $h=[1, -1]$
&lt;ul&gt;
&lt;li&gt;crude hight-pass filter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;property&#34;&gt;Property&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Linearity: $(c_1x_1+c_2x_2)&lt;em&gt;h = c_1x1&lt;/em&gt;h+c_2x_2*h$&lt;/li&gt;
&lt;li&gt;Commutativity: $x&lt;em&gt;h = h&lt;/em&gt;x$ (we can treat the signal as the filter)&lt;/li&gt;
&lt;li&gt;Associativity: $(x&lt;em&gt;h)&lt;em&gt;g = x&lt;/em&gt;(h&lt;/em&gt;g)$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Similar to wave propagation, where after reflection the signal gets delayed and attenuated, and microphone sums up the waves from both direct path as well as reflection path, each $x[n-k]$ could be regarded as being&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;delayed by $k$ time steps&lt;/li&gt;
&lt;li&gt;scaled by $h[k]$&lt;/li&gt;
&lt;li&gt;added together&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since convolution is &lt;strong&gt;linear&lt;/strong&gt; and &lt;strong&gt;time invariant&lt;/strong&gt;, every LSI system can be expressed as a convolution, and the &amp;ldquo;filter&amp;rdquo; $h$ is the &lt;em&gt;impulse response&lt;/em&gt; of the system, which completely determines the behavior of the system.&lt;/p&gt;
&lt;p&gt;If $h$ is finite in length, it&#39;s called a &lt;span style=&#34;color: #abd282&#34;&gt;Finite Impulse Response(FIR)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;convolution-theorem&#34;&gt;Convolution theorem&lt;/h2&gt;
&lt;p&gt;Convolution (int circular mode&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;) in the time domain $x*h$ $\Leftrightarrow$ multiplication in the frequency domain $X \cdot H$, or&lt;/p&gt;
&lt;p&gt;$$ DFT(x*h) = DFT(x) \cdot DFT(h) $$&lt;/p&gt;
&lt;h3 id=&#34;fast-convolution&#34;&gt;Fast convolution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Convolution in time domain has a time complexity of $O(N \cdot K)$&lt;/li&gt;
&lt;li&gt;In the frequency domain, it takes $N$ multiplies, so
&lt;ol&gt;
&lt;li&gt;zero-pad $h$ from $K$ to $N$ samples&lt;/li&gt;
&lt;li&gt;compute two forward DFTs $O(2 \cdot N \cdot log_2N)$&lt;/li&gt;
&lt;li&gt;compute one inverse DFT $O(N \cdot log_2N)$&lt;/li&gt;
&lt;li&gt;totally $O(N \cdot log_2N)$&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;filters&#34;&gt;Filters&lt;/h1&gt;
&lt;p&gt;Frequency domain is complex-valued, with multiplication rule:&lt;/p&gt;
&lt;p&gt;$$ (r \cdot e^{j \theta}) (s \cdot e^{j \varphi }) = (r \cdot s) \cdot e^{j(\theta + \varphi)} $$&lt;/p&gt;
&lt;h2 id=&#34;fir-filters&#34;&gt;FIR filters&lt;/h2&gt;
&lt;p&gt;Finite Impulse Response means the system&#39;s response to an impulse goes to 0 at finite time step, or $y[n]$ depends on finitely many inputs $x[n-k]$.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Positives:
&lt;ul&gt;
&lt;li&gt;Usually more simple to implement&lt;/li&gt;
&lt;li&gt;can analyze by DFT&lt;/li&gt;
&lt;li&gt;stable and well-behaved&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Negatives:
&lt;ul&gt;
&lt;li&gt;may not be efficient&lt;/li&gt;
&lt;li&gt;somewhat limited expressivity (non-adaptive)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;delayed-impulse-analysis&#34;&gt;Delayed impulse analysis&lt;/h3&gt;
&lt;p&gt;A k-step delay filter $h_k = [0, 0, 0, &amp;hellip;, 1]$ has DFT $H_k[m]=e^{-j2 \pi \cdot m \cdot k/N}$, which is a sinusoid of frequency $k$.&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_impulse.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;p&gt;Phase response of a delay filter (wrapped &amp;amp; unrapped):&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_impulse_phase.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h3 id=&#34;averaging-filter-rectanglebox-analysis&#34;&gt;Averaging filter (rectangle/box) analysis&lt;/h3&gt;
&lt;p&gt;K-tap averaging filter $h_a = [1/K, 1/K, &amp;hellip;, 1/K, 0, 0, &amp;hellip;]$, which could be regarded as an average of K delayed filters. Thus,&lt;br /&gt;
$$ H_a[m] = DFT(h_a) = 1/K \sum_k DFT(h_k)[m] =  1/K \sum_k e^{-j2 \pi \cdot m \cdot k/N} $$&lt;/p&gt;
&lt;p&gt;The real part $Re{H_a}$ is a $sinc$ function. If we apply $h_a$ to input signal $x$, according to &lt;a href=&#34;#convolution-theorem&#34;&gt;convolution theorem&lt;/a&gt;, we multiply them in frequency domain, and magnitudes of output is: $|X[m] \cdot H[m]| = |X[m]| \cdot |H_a[m]|$. Since $|H_a[m]|$ decays slowly but bounces up and down in high frequency, there will be high frequency components remaining if we use averaging filter as a low pass filter.&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_average.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;p&gt;Phase response of a rectangle filter is sawtoothy even after unwrapping, but it&#39;s ok since it&#39;s linear within the pass-bands:&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_average_phase.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h3 id=&#34;typical-fir-window-analysis&#34;&gt;Typical FIR window analysis&lt;/h3&gt;
&lt;p&gt;Most window functions for DFT could be used as low-pass filters. Below is the frequency response for Hann, Blackman-Harris, and Rectangle window.&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_window.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;100%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;p&gt;Since the windows above are linear within the pass-bands, audible frequencies will have constant delay without noticeable phasing artifacts:&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/dft_window_phase.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;60%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h2 id=&#34;iir-filters&#34;&gt;IIR filters&lt;/h2&gt;
&lt;p&gt;Infinite Impulse Response filters can depend on infinitely many previous inputs by &lt;strong&gt;feedback&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;$$ y[n] = \sum_{k=0}^K b[k] \cdot x[n-k] - \sum_{k=1}^K a[k] \cdot y[n-k] $$&lt;/p&gt;
&lt;p&gt;Here $K$ is the order of the filter. If we define $a[0] = 1$, then we get:&lt;/p&gt;
&lt;p&gt;$$ \sum_{k \geq 0} a[k] \cdot y[n-k] = \sum_{k \geq 0} b[k] \cdot x[n-k] $$&lt;/p&gt;
&lt;p&gt;Due to the feedback, to achieve comparable results, IIR filters need fewer coefficients and multiply-adds with lower latency than FIR filters, so it can be much more efficient.&lt;/p&gt;
&lt;p&gt;To analyze frequency response of filters, we usually use following parameters to measure their performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;passband, passband ripple&lt;/li&gt;
&lt;li&gt;transition region&lt;/li&gt;
&lt;li&gt;stopband, stopband attenuation&lt;/li&gt;
&lt;/ul&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/filter_param.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h3 id=&#34;butterworth-filters&#34;&gt;Butterworth filters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;flat response in passband and stopband&lt;/li&gt;
&lt;li&gt;very wide transition band&lt;/li&gt;
&lt;li&gt;higher order = faster transition&lt;/li&gt;
&lt;/ul&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/butterworth.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;butter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_nyquist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;chebyshev-filters&#34;&gt;Chebyshev filters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;narrow transition band&lt;/li&gt;
&lt;li&gt;type 1 has passband ripples and flat stopband(pictured); type 2 has stopband ripples and flat passband&lt;/li&gt;
&lt;li&gt;non-linear phase response&lt;/li&gt;
&lt;/ul&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/chebyshev.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cheby1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_ripple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_nyquist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cheby2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_ripple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_nyquist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;elliptic-filters&#34;&gt;Elliptic filters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;narrowest transition band&lt;/li&gt;
&lt;li&gt;ripples in both passband and stopband&lt;/li&gt;
&lt;li&gt;most non-linear phase response&lt;/li&gt;
&lt;/ul&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/elliptic.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;80%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ellip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_ripple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min_stop_atten&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_nyquist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;z-transform&#34;&gt;Z-Transform&lt;/h1&gt;
&lt;p&gt;$$ X(z) = \sum_{n=0}^{\infty} x[n] \cdot z^{-n} $$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DFT converts $N$ samples ($x[n]$) into N complex coefficients ($X[m]$)&lt;/li&gt;
&lt;li&gt;z-Transform generalizes the DFT. Specifically, ZT converts $N$ samples ($x[n]$) into a function $X[z]$ on the complex (z-) plane, with $x[n]$ as coefficients of a polynomial in $z^{-1}$. When $z = (e^{j2 \pi \cdot m/N})$, $X(z)$ becomes DFT $X[m]$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;properties&#34;&gt;Properties&lt;/h2&gt;
&lt;p&gt;ZT allows us to analyze IIR filters without dependency on signal length N. It has following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linearity:
&lt;ul&gt;
&lt;li&gt;$ZT(c_1 \cdot x_1 + c_2 \cdot x_2) = c_1 \cdot ZT(x_1) + c_2 \cdot ZT(x_2)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Convolution theorem:
&lt;ul&gt;
&lt;li&gt;$ZT(x * h) = ZT(x) \cdot ZT(h)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shifting theorem:
&lt;ul&gt;
&lt;li&gt;Delaying by $k$ samples $\Leftrightarrow$ $X(z) \rightarrow z^{-k} \cdot X(z)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transform-function&#34;&gt;Transform function&lt;/h2&gt;
&lt;p&gt;For a general IIR filter $ y[n] = \sum_{k=0}^K b[k] \cdot x[n-k] - \sum_{k=1}^K a[k] \cdot y[n-k] $, we have $Y(z) = H(z) \cdot X(z)$, where $H(z)$ is the **transform function**:&lt;/p&gt;
&lt;p&gt;$$ H(z) = \dfrac{\sum_{k=0} b[k] \cdot z^{-k}}{1 + \sum_{k=1} a[k] \cdot z^{-k}} $$&lt;/p&gt;
&lt;h2 id=&#34;frequency-response&#34;&gt;Frequency response&lt;/h2&gt;
&lt;p&gt;$e^{j2 \pi \cdot m/N}$ is a point on the unit circle in the complex plane, according to &lt;a href=&#34;#idft-inverse-dft&#34;&gt;IDFT&lt;/a&gt;, such a point correpsonds to a sinusoid with frequency $f_s \cdot m/N$, or $ e^{j2 \pi \cdot t} \Rightarrow f_s \cdot t, t \in [0, 1/2]$. Thus, we can relate the angle of points in unit circle with frequencies:&lt;/p&gt;
&lt;p&gt;$$ e^{j \theta} \Rightarrow f_s \cdot \theta / 2 \pi $$&lt;/p&gt;
&lt;p&gt;By evaluating the transfer function at $z=e^{2 \pi \cdot t}$ for $t \in [0, 1/2]$, we can see how the frequency magnitude response $|H(e^{j2 \pi \cdot t})|$ changes with frequency $f_s \cdot t$.&lt;/p&gt;
&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/iir_freq_resp.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;60%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;h2 id=&#34;zeros-and-poles&#34;&gt;Zeros and poles&lt;/h2&gt;
&lt;p&gt;Places where $H(z) = 0$ are infinitely attenuated and are called &lt;strong&gt;zeros&lt;/strong&gt; of the system. Since $H(z)$ is a polynomial, which is continuous, frequencies near the zeros will also be attenuated. To find zeros, set $\sum b[k] \cdot z^{-k} = 0$ and solve for $z$.&lt;/p&gt;
&lt;p&gt;Places where $H(z)$ divides by 0 are called the &lt;strong&gt;poles&lt;/strong&gt; of the system, which correspond to &lt;strong&gt;resonance and gain&lt;/strong&gt;. To find poles, solve for $z$ by denominator $1 + \sum_{k=1} a[k] \cdot z^{-k} = 0$&lt;/p&gt;
&lt;p&gt;Given positions of poles and zeros (and total gain), the system is fully determined:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zpk2tf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;poles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And vice versa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;poles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scipy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tf2zpk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;figure &gt;
  
    
    &lt;img data-src=&#34;http://nianze.tk/images/2020/01/30/poles_zeros.jpg&#34;  data-caption=&#34;&#34; src=&#34;data:image/svg+xml,%0A%3Csvg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;24&#39; height=&#39;24&#39; viewBox=&#39;0 0 24 24&#39;%3E%3Cpath fill=&#39;none&#39; d=&#39;M0 0h24v24H0V0z&#39;/%3E%3Cpath fill=&#39;%23aaa&#39; d=&#39;M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 16H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zm-4.44-6.19l-2.35 3.02-1.56-1.88c-.2-.25-.58-.24-.78.01l-1.74 2.23c-.26.33-.02.81.39.81h8.98c.41 0 .65-.47.4-.8l-2.55-3.39c-.19-.26-.59-.26-.79 0z&#39;/%3E%3C/svg%3E&#34; class=&#34;lazyload&#34; width=&#34;60%&#34; height=&#34;&#34;/&gt;
    
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;If a system has a pole and a zero at the same $z$, they cancel out&lt;/li&gt;
&lt;li&gt;If b and a are real, then poles/zeros always come in conjugate pairs&lt;/li&gt;
&lt;li&gt;A system is &lt;em&gt;stable&lt;/em&gt; if all poles are strictly inside the unit circle&lt;/li&gt;
&lt;li&gt;A system is &lt;em&gt;unstable&lt;/em&gt; if any poles are strictly outside the unit circle&lt;/li&gt;
&lt;li&gt;Zeros do not affect stability&lt;/li&gt;
&lt;li&gt;Proximity of poles and zeros to the unit circle corresponds to filter sharpness&lt;/li&gt;
&lt;li&gt;Angle $\theta$ of poles and zeros corrspond to frequency ($f_s \cdot \theta / 2 \pi $)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;We need the &lt;a href=&#34;#shifting&#34;&gt;DFT shifting property&lt;/a&gt;, which assumes looping. If we don&#39;t want circular convolution, just pad the signal with K-1 more zeros &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description>
      </item>
      
    
  </channel>
</rss>