<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code.Music.Photography</title>
    <link>http://nianze.ml/</link>
    <description>Recent content on Code.Music.Photography</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 21 Feb 2018 22:33:05 -0500</lastBuildDate>
    
	<atom:link href="http://nianze.ml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Item-30 Understand ins and outs of inlining</title>
      <link>http://nianze.ml/2018/02/ins-and-outs-of-inlining/</link>
      <pubDate>Wed, 21 Feb 2018 22:33:05 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/ins-and-outs-of-inlining/</guid>
      <description>&lt;p&gt;Limit most inlining to small, frequently called functions to facilitate debugging and binary upgradability, minimize potential code bloat, and maximize the chances of greater program speed.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-29 Strive for exception-safe code</title>
      <link>http://nianze.ml/2018/02/strive-for-exception-safe-code/</link>
      <pubDate>Tue, 20 Feb 2018 18:23:38 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/strive-for-exception-safe-code/</guid>
      <description>&lt;p&gt;Exception-safe functions leak no resources and allow no data structures to become corrupted, even when exceptions are thrown. Such functions offer the basic, strong, and nothrow guarantees.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-28 Avoid returning handles to object internals</title>
      <link>http://nianze.ml/2018/02/avoid-return-handles-to-obejct-internals/</link>
      <pubDate>Fri, 16 Feb 2018 12:26:14 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/avoid-return-handles-to-obejct-internals/</guid>
      <description>&lt;p&gt;Avoid returning handles to object internals to increase encapsulation, help &lt;code&gt;const&lt;/code&gt; member functions act &lt;code&gt;const&lt;/code&gt;, and minimize the creation of dangling handles.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-27 Minimize_casting</title>
      <link>http://nianze.ml/2018/02/minimize-casting/</link>
      <pubDate>Thu, 15 Feb 2018 17:43:53 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/minimize-casting/</guid>
      <description>&lt;p&gt;Avoid casts and develop a cast-free alternative whenever practical, especially &lt;code&gt;dynamic_cast&lt;/code&gt; in performance-sensitive code.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-26 Postpone variable definitions as long as possible</title>
      <link>http://nianze.ml/2018/02/postpone-variable-definitions/</link>
      <pubDate>Wed, 14 Feb 2018 10:50:18 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/postpone-variable-definitions/</guid>
      <description>&lt;p&gt;Postponing variable definitions as long as possible increases program clarity and improves progranm efficiency.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-25 Consider support for a non-throwing swap</title>
      <link>http://nianze.ml/2018/02/support-for-a-non-throwing-swap/</link>
      <pubDate>Tue, 13 Feb 2018 19:11:15 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/support-for-a-non-throwing-swap/</guid>
      <description>&lt;p&gt;When &lt;code&gt;std::swap&lt;/code&gt; would be inefficient for your type,provide a non-throwing &lt;code&gt;swap&lt;/code&gt; member function, a non-member &lt;code&gt;swap&lt;/code&gt; calling the member, and possibly a specialized &lt;code&gt;std::swap&lt;/code&gt; for the case of classes (not templates).
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-24 Declare non-member functions when type conversions should apply to all parameters</title>
      <link>http://nianze.ml/2018/02/when-to-declare-non-member-functions/</link>
      <pubDate>Mon, 12 Feb 2018 22:47:20 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/when-to-declare-non-member-functions/</guid>
      <description>&lt;p&gt;If we need type conversions on all parameters to a function including the one pointed to by the &lt;code&gt;this&lt;/code&gt; pointer, the function must be a non-member.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-23 Prefer non-member non-friend function to member function</title>
      <link>http://nianze.ml/2018/02/prefer-non-member-non-friend-function-to-member-function/</link>
      <pubDate>Sun, 11 Feb 2018 21:33:28 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/prefer-non-member-non-friend-function-to-member-function/</guid>
      <description>&lt;p&gt;Prefer non-member non-friend functions to member functions for better encapsulation, packaging flexibility, and functional extensibility.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-22 Declare data members private</title>
      <link>http://nianze.ml/2018/02/declare-data-members-private/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/02/declare-data-members-private/</guid>
      <description>&lt;p&gt;Declaring data members &lt;code&gt;private&lt;/code&gt; gives clients syntactically uniform access to data, affords fine-grained access control, allows invariants to be enforced, and offers class authors implementation flexibility.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-21 Don&#39;t return a reference when we have to return an object</title>
      <link>http://nianze.ml/2018/02/do-not-return-a-ref-when-must-return-an-object/</link>
      <pubDate>Fri, 09 Feb 2018 18:02:23 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/do-not-return-a-ref-when-must-return-an-object/</guid>
      <description>&lt;p&gt;Never return a pointer or reference to a local stack object, a refenrence to a heap-allocated object, or a pointer or reference to a local static object if there is a change that more than one such object will be needed (item 4 provides a &amp;ldquo;counter&amp;rdquo; example that is reasonable in single-threaded environments).
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-20 Perfer pass-by-reference-to-const to pass-by-value</title>
      <link>http://nianze.ml/2018/02/perfer-pass-by-reference-to-const/</link>
      <pubDate>Thu, 08 Feb 2018 16:26:33 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/perfer-pass-by-reference-to-const/</guid>
      <description>&lt;p&gt;Pass by reference-to-&lt;code&gt;const&lt;/code&gt; is typically more efficient than pass by value and avoids the slicing problem.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-19 Treat class design as type design</title>
      <link>http://nianze.ml/2018/02/class-design-is-type-design/</link>
      <pubDate>Wed, 07 Feb 2018 13:47:07 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/class-design-is-type-design/</guid>
      <description>&lt;p&gt;Before definining a new type, be sure to consider all the issues discussed in this item.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-18 Make interfaces easy to use correctly and hard to use incorrectly</title>
      <link>http://nianze.ml/2018/02/make-interfaces-easy-to-use-correctly/</link>
      <pubDate>Tue, 06 Feb 2018 19:05:53 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/make-interfaces-easy-to-use-correctly/</guid>
      <description>&lt;p&gt;Good interfaces are easy to use correctly and hard to use incorrectly.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018进度表</title>
      <link>http://nianze.ml/2018/02/2018-roadmap/</link>
      <pubDate>Tue, 06 Feb 2018 11:44:42 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/2018-roadmap/</guid>
      <description>&lt;p&gt;马上春节了，来列一下新年计划吧。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-17 Store newed objects in smart pointers in standalone statements</title>
      <link>http://nianze.ml/2018/02/store-newed-objects-in-smart-pointers-in-standalone-statements/</link>
      <pubDate>Mon, 05 Feb 2018 18:04:38 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/store-newed-objects-in-smart-pointers-in-standalone-statements/</guid>
      <description>&lt;p&gt;Failure to do this can lead to subtle resource leaks when exceptions are thrown.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-16 Use the same form in corresponding uses of new and delete</title>
      <link>http://nianze.ml/2018/02/use-the-same-form-in-matching-new-and-delete/</link>
      <pubDate>Sun, 04 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/02/use-the-same-form-in-matching-new-and-delete/</guid>
      <description>&lt;p&gt;If you use [] in a &lt;code&gt;new&lt;/code&gt; expression, use [] in the corresponding &lt;code&gt;delete&lt;/code&gt; expression; If not, no [] in the matching &lt;code&gt;delete&lt;/code&gt; expression.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-15 Provide access to raw resource in resource-managing classes</title>
      <link>http://nianze.ml/2018/02/provide-access-to-raw-rsc/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/02/provide-access-to-raw-rsc/</guid>
      <description>&lt;p&gt;Each RAII class should offer a way to get at the resource it manages.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-14 Copy behavior in resource-managing classes</title>
      <link>http://nianze.ml/2018/02/copy-behavior-of-raii/</link>
      <pubDate>Fri, 02 Feb 2018 13:27:32 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/copy-behavior-of-raii/</guid>
      <description>&lt;p&gt;Copying an RAII object entails copying the resource it manages, so the copying behavior of the resource determines the copying behavior of the RAII object.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-13 Use objects to manage resources</title>
      <link>http://nianze.ml/2018/02/use-objects-to-manage-resources/</link>
      <pubDate>Thu, 01 Feb 2018 18:20:10 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/02/use-objects-to-manage-resources/</guid>
      <description>&lt;p&gt;Use RAII objects such as &lt;code&gt;tr1::shared_ptr&lt;/code&gt; and &lt;code&gt;auto_ptr&lt;/code&gt; to prevent resource leaks.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-12 Copy all parts of an object</title>
      <link>http://nianze.ml/2018/01/copy-all-parts-of-an-object/</link>
      <pubDate>Wed, 31 Jan 2018 18:16:11 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/copy-all-parts-of-an-object/</guid>
      <description>&lt;p&gt;Be sure to copy all of an object&amp;rsquo;s data members and all of its base class parts.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-11 Handle self assignment in operator=</title>
      <link>http://nianze.ml/2018/01/handle-self-assignment/</link>
      <pubDate>Tue, 30 Jan 2018 18:34:01 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/handle-self-assignment/</guid>
      <description>&lt;p&gt;Solve self assignment situation in operator= by comparing addresses of source and target objects, careful statement ordering, and copy-and-&lt;code&gt;swap&lt;/code&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-10 Have assignment operators return a reference to *this</title>
      <link>http://nianze.ml/2018/01/have-assignment-op-return-a-ref/</link>
      <pubDate>Mon, 29 Jan 2018 18:17:34 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/have-assignment-op-return-a-ref/</guid>
      <description>&lt;p&gt;As title suggests.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-9 不要在构造函数和析构函数中触发虚函数</title>
      <link>http://nianze.ml/2018/01/no-virtual-func-in-ctor-dtor/</link>
      <pubDate>Sat, 27 Jan 2018 21:03:05 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/no-virtual-func-in-ctor-dtor/</guid>
      <description>&lt;p&gt;不同于Java或者C#,在C++中构造函数和析构函数里的虚函数不会实现多态的效果。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>人间不值得。。。吗？</title>
      <link>http://nianze.ml/2018/01/worth-it-or-not/</link>
      <pubDate>Sun, 28 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/01/worth-it-or-not/</guid>
      <description>&lt;p&gt;看了最近那期《十三邀》&lt;a href=&#34;https://v.qq.com/x/page/v0025csa5a9.html&#34;&gt;许知远&lt;/a&gt;对话&lt;a href=&#34;https://v.qq.com/x/page/j0025rf9fow.html&#34;&gt;李诞&lt;/a&gt;。有点意思。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-8 Prevent exception from leaving destructor</title>
      <link>http://nianze.ml/2018/01/prevent-exception-from-leaving-dtor/</link>
      <pubDate>Fri, 26 Jan 2018 20:15:48 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/prevent-exception-from-leaving-dtor/</guid>
      <description>&lt;p&gt;It is discouraged practice to emit exceptions from destructors.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-7 Declare destructor virtual in polymorphic base classes</title>
      <link>http://nianze.ml/2018/01/virtual-dtor-in-polymorphic-base-class/</link>
      <pubDate>Thu, 25 Jan 2018 18:04:14 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/virtual-dtor-in-polymorphic-base-class/</guid>
      <description>&lt;p&gt;If a class has any virtual functions (for polymorphic purpose), it should have a virtual destructor.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-6 Disallow unwanted compiler-generated functions</title>
      <link>http://nianze.ml/2018/01/functions-silently-created/</link>
      <pubDate>Wed, 24 Jan 2018 16:18:59 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/functions-silently-created/</guid>
      <description>&lt;p&gt;Declare unwanted member functions &lt;em&gt;private&lt;/em&gt; without implementations to disallow functionality automatically provided by compilers.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-5 What functions C&#43;&#43; silently generates</title>
      <link>http://nianze.ml/2018/01/functions-silently-created/</link>
      <pubDate>Tue, 23 Jan 2018 18:42:07 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/functions-silently-created/</guid>
      <description>&lt;p&gt;Compilers may implicitly generate their own versions of default constructor, copy constructor, copy assignment operator, and destructor.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-4 Initialize objects before they&#39;re used</title>
      <link>http://nianze.ml/2018/01/initialize-before-use/</link>
      <pubDate>Mon, 22 Jan 2018 18:47:54 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/initialize-before-use/</guid>
      <description>&lt;p&gt;Since C++ is fickle about initialization, some good coding style is suggested.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>紫羅蘭永恆花園</title>
      <link>http://nianze.ml/2018/01/violet-snow/</link>
      <pubDate>Sun, 21 Jan 2018 23:25:09 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/violet-snow/</guid>
      <description>&lt;p&gt;想いを綴る、愛を知るために。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-3 Use const whenever possible</title>
      <link>http://nianze.ml/2018/01/use-const-whenever-possible/</link>
      <pubDate>Fri, 19 Jan 2018 14:31:40 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/use-const-whenever-possible/</guid>
      <description>&lt;p&gt;Useful tips on using &lt;code&gt;const&lt;/code&gt; in C++.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-0 Federation of languages</title>
      <link>http://nianze.ml/2018/01/cpp-is-multiparadigm/</link>
      <pubDate>Thu, 18 Jan 2018 20:01:47 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/cpp-is-multiparadigm/</guid>
      <description>&lt;p&gt;C++ is a multiparadigm programming langrage.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-2 Compare &lt;iostream&gt; to &lt;stdio.h&gt;</title>
      <link>http://nianze.ml/2018/01/tips-on-iostream/</link>
      <pubDate>Wed, 17 Jan 2018 19:14:29 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/tips-on-iostream/</guid>
      <description>&lt;p&gt;Some tips about &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Item-1 Prefer consts, enums and inlines to #defines</title>
      <link>http://nianze.ml/2018/01/start-of-effective-cpp-series/</link>
      <pubDate>Tue, 16 Jan 2018 18:41:58 -0500</pubDate>
      
      <guid>http://nianze.ml/2018/01/start-of-effective-cpp-series/</guid>
      <description>&lt;p&gt;A new (hopefully) daily review on &lt;code&gt;C++&lt;/code&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>当谈论有趣时，我在谈论什么</title>
      <link>http://nianze.ml/2018/01/creation-is-fun/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/01/creation-is-fun/</guid>
      <description>&lt;p&gt;Dull guys are all the same, while cool souls each have their own shine.&lt;br /&gt;
无趣的灵魂都是相同的，有趣的灵魂各有各的不同
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Machine learning overview</title>
      <link>http://nianze.ml/2018/01/start-of-machine-learning-series/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/01/start-of-machine-learning-series/</guid>
      <description>&lt;p&gt;My first post in the new &lt;code&gt;machine learning&lt;/code&gt; series.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Coco(寻梦环游记)随想</title>
      <link>http://nianze.ml/2018/01/coco/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2018/01/coco/</guid>
      <description>&lt;p&gt;观看Coco之后的一些随想。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Photo Gallery</title>
      <link>http://nianze.ml/photo-faves/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/photo-faves/</guid>
      <description>A gallery for some of my photos stored in Flickr. You may also check out my Instagram.   Total images: 0</description>
    </item>
    
    <item>
      <title>使用Hugo在GitHub Pages上搭建免费个人网站</title>
      <link>http://nianze.ml/2017/12/personal-site-with-hugo/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2017/12/personal-site-with-hugo/</guid>
      <description>&lt;p&gt;This article talks about how to use &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; to build a personal website hosted on &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt;. It also introduces how to find a free custom domain name from &lt;a href=&#34;http://www.freenom.com/&#34;&gt;Freenom&lt;/a&gt; and migrated the DNS server to &lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt; in order to use HTTPs with chosen custom domain name on GitHub Pages.&lt;br /&gt;
本文讲述了如何使用&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;将个人网页托管在&lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt;上。同时也介绍了如何在&lt;a href=&#34;http://www.freenom.com/&#34;&gt;Freenom&lt;/a&gt;上找到免费个人域名并利用&lt;a href=&#34;https://www.cloudflare.com/&#34;&gt;CloudFlare&lt;/a&gt;的免费DNS服务在Github Pages上以HTTPs协议加载个人域名。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nianze (Nzo) Liu</title>
      <link>http://nianze.ml/about/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/about/</guid>
      <description>Download Resume  Work Experience Bloomberg L.P. May 2017 - Today Full stack software developer  Building Trader Access Manager service that manages user privileges for Bloomberg termianl clients   Oracle Corp.May 2016 - Aug. 2016 Software Engineer Intern Virtualizing static fields in 3rd-party Java library during runtime to improve memory efficiency in Weblogic Server   Skills Programming C++ JavaScript Python Java OCaml SQL LaTex  Tools GitHub GTest, GMock Emacs, Vim, VSCode MacOS, Windows, Linux Bash, Shell Programming Scikit-learn, TensorFlow Hugo Static Site Generator  Education Cornell University | M.</description>
    </item>
    
    <item>
      <title>一些近况</title>
      <link>http://nianze.ml/2017/12/return-to-my-blog/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2017/12/return-to-my-blog/</guid>
      <description>&lt;p&gt;重新回归搁置了近一年的博客，开始新的企划。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宾得KP实测心得</title>
      <link>http://nianze.ml/2017/05/pentax-kp/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2017/05/pentax-kp/</guid>
      <description>&lt;p&gt;复古情怀向中端单反宾得KP开箱体验与实测心得。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>宾得K70开箱</title>
      <link>http://nianze.ml/2017/01/pentax-k70/</link>
      <pubDate>Tue, 17 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2017/01/pentax-k70/</guid>
      <description>&lt;p&gt;高性价比中低端单反宾得K70开箱及像素位移模式简单测试。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Binary search review</title>
      <link>http://nianze.ml/2016/12/binary-search-review/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/12/binary-search-review/</guid>
      <description>&lt;p&gt;Detailed review on binary search.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Alien dictionary</title>
      <link>http://nianze.ml/2016/11/alien-dictionary/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/alien-dictionary/</guid>
      <description>&lt;p&gt;Build a graph to solve alien dictionary problem via DFS/BFS.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Task schedule - greedy algorithm</title>
      <link>http://nianze.ml/2016/11/task-schedule/</link>
      <pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/task-schedule/</guid>
      <description>&lt;p&gt;Use greedy algorigthm to solve task scheduleing problem.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LinkedList reversing</title>
      <link>http://nianze.ml/2016/11/linkedlist-reversing/</link>
      <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/linkedlist-reversing/</guid>
      <description>&lt;p&gt;Summary on LinkedList reversing.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Substring type problem&#39;s template</title>
      <link>http://nianze.ml/2016/11/substring-template/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/substring-template/</guid>
      <description>&lt;p&gt;Two pointer template to solve substring problem.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Remove Invalid Parentheses</title>
      <link>http://nianze.ml/2016/11/invalid-parentheses/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/invalid-parentheses/</guid>
      <description>&lt;p&gt;Several ways to remove invalid parentheses problem.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Convert Char to String in Java</title>
      <link>http://nianze.ml/2016/11/char-to-string/</link>
      <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/11/char-to-string/</guid>
      <description>&lt;p&gt;Convert Char to String.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>When use Dueque</title>
      <link>http://nianze.ml/2016/10/dueque/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/10/dueque/</guid>
      <description>&lt;p&gt;Deque vs. LinkedList vs. Stack
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Valid tree</title>
      <link>http://nianze.ml/2016/10/valid-tree/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/10/valid-tree/</guid>
      <description>&lt;p&gt;DFS, BFS and Union-find comparison.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Binary search basic</title>
      <link>http://nianze.ml/2016/08/binary-search/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/08/binary-search/</guid>
      <description>&lt;p&gt;What should be noted when doing binary search.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spirited away</title>
      <link>http://nianze.ml/2016/02/spirited-away/</link>
      <pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/02/spirited-away/</guid>
      <description>&lt;p&gt;东风夜放花千树，更吹落、星如雨。&lt;br /&gt;
宝马雕车香满路。凤箫声动，玉壶光转，一夜鱼龙舞。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>New semester is coming</title>
      <link>http://nianze.ml/2016/01/new-semester/</link>
      <pubDate>Mon, 25 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/01/new-semester/</guid>
      <description>&lt;p&gt;As the new semester approaches, I finished two more clarinet covers
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>填个去年的坑</title>
      <link>http://nianze.ml/2016/01/return-of-monkey-king/</link>
      <pubDate>Fri, 08 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/01/return-of-monkey-king/</guid>
      <description>&lt;p&gt;简单尝试下中文歌曲的翻录（既然是中文歌了我就用中文来写好啦）
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>New year cover - Aesthetic</title>
      <link>http://nianze.ml/2016/01/aesthetic/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2016/01/aesthetic/</guid>
      <description>&lt;p&gt;My new year&amp;rsquo;s first cover is for Hiroyuki Sawano!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>End of my first semester in Cornell</title>
      <link>http://nianze.ml/2015/12/end-of-semester/</link>
      <pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2015/12/end-of-semester/</guid>
      <description>&lt;p&gt;A mark on the end of my first semester in Cornell.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Halloween celebration</title>
      <link>http://nianze.ml/2015/11/halloween-celebration/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2015/11/halloween-celebration/</guid>
      <description>&lt;p&gt;A small piece of music to celebrating the Halloween.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Early collection of clarinet cover</title>
      <link>http://nianze.ml/2015/07/clarinet-cover-collection/</link>
      <pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://nianze.ml/2015/07/clarinet-cover-collection/</guid>
      <description>&lt;p&gt;Some of my early clarinet cover is collected here in this article.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>